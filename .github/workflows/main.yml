name: CI/CD Pipeline for Maya CLI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .  # Install package in editable mode
          pip install pytest

      - name: Verify Tests Directory Exists
        run: |
          if [ ! -d "tests" ]; then
            echo "‚ùå ERROR: 'tests/' directory not found!"
            exit 1
          fi

      - name: Run Tests
        run: pytest tests/ --maxfail=5 --disable-warnings

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install build dependencies
        run: pip install setuptools wheel build

      - name: Build Distribution Files
        run: python -m build

      - name: Upload Package as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: maya-cli-package
          path: dist/*

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install Twine
        run: pip install twine

      - name: Download Package Artifact
        uses: actions/download-artifact@v3
        with:
          name: maya-cli-package
          path: dist

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*
